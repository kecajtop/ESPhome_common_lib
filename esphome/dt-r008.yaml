substitutions:
  devicename: dt-r008
  upper_devicename: DT-R008
  friendly_name: DT-R008
  device_icon: mdi:chip
  key: !secret key_dt-r008
  ota: !secret ota_dt-r008
  IP: !secret IP_dt-r008
  fallback_pass: !secret fallback_pass_dt-r008
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  wifi_ssid_ha: !secret wifi_ssid_ha
  wifi_password_ha: !secret wifi_password_ha
  timezone_ha: !secret timezone_ha
  log_level: DEBUG

packages:
  wifi: !include common/wifi.yaml
  device_base: !include common/device_base.yaml
  generic: !include common/generic.yaml
  esp32_only: !include common/esp32_only.yaml

esphome:
  name: $devicename
#  on_boot:
#    priority: 600
    # ...
#    then:
#      - script.execute: backlight_toggle

esp32:
  board: esp32dev
  framework:
    type: arduino

external_components:
  #- source: github://kecajtop/esphome-modbus-server@master
  #  refresh: 60s
  #  components:
  #    - modbus_server
  
  #- source: github://kecajtop/dtr0xx_io@master
  #  refresh: 60s
  #  components:
  #    - dtr0xx_io
#  - source: github://TheStaticTurtle/esphome_syslog
#    components: [syslog]
#  - source: github://esphome/esphome@dev
#    components:
#      - wifi
  - source:
      type: local
      path: my_components
    components: [dtr0xx_io, modbus_server]


#ethernet:
#  type: JL1101
#  mdc_pin: 23
#  mdio_pin: 18
#  clk_mode: GPIO17_OUT
#  power_pin: 0
#  phy_addr: 1

#syslog:
#    ip_address: !secret LOGGER_IP 
#    port: 514
    #enable_logger: false
                   
uart:
  id: mod_bus
  tx_pin: 1
  rx_pin: 3
  baud_rate: 9600
  stop_bits: 1
  data_bits: 8
  parity: NONE
  debug:
    direction: BOTH

#modbus:
#  flow_control_pin: 33
#  id: modbus1

#modbus_controller:
#  - id: epever
#    ## the Modbus device addr
#    address: 0x1
#    modbus_id: modbus1
#    setup_priority: -10
#    update_interval: 10s

modbus_server:
  - id: modbuserver
    uart_id: mod_bus
    flow_control_pin: 33
    address: 2 # slave address
    holding_registers:
      - start_address: 79 # starting register range
        default: 82 # default value for all those registers
        number: 10 # number of registers in the range
        on_write: |
          ESP_LOGI("ON_WRITE", "This is a lambda. address=%d, value=%d", address, value);
          return value;
        on_read: | # called whenever a register in the range is read
          // 'address' contains the requested register address
          // 'value' contains the stored register value 
          ESP_LOGI("ON_READ", "This is a lambda. address=%d, value=%d", address, value);
          return value; // you can return the stored value or something else.
      - start_address: 200 # in this example we map register 200 to a switch
        number: 1
        on_write: |
          if(value)
            id(relay_1)->turn_on();
          else
            id(relay_1)->turn_off();
          ESP_LOGI("ON_WRITE", "This is a lambda. address=%d, value=%d", address, value);
          return value;
        on_read: |
          return (id(temp_sens1).state)*100;
      - start_address: 201 # in this example we map register 200 to a switch
        number: 1
        on_write: |
          if(value)
            id(relay_1)->turn_on();
          else
            id(relay_1)->turn_off();
          ESP_LOGI("ON_WRITE", "This is a lambda. address=%d, value=%d", address, value);
          return value;
        on_read: |
          return (id(temp_sens1).state)*10;
      - start_address: 202 # in this example we map register 200 to a switch
        number: 1
        on_write: |
          if(value)
            id(relay_1)->turn_on();
          else
            id(relay_1)->turn_off();
          ESP_LOGI("ON_WRITE", "This is a lambda. address=%d, value=%d", address, value);
          return value;
        on_read: |
          return (id(temp_sens1).state)*1;


dtr0xx_io:
  - id: dtr0xx_io_hub
    dingtian_clk_pin: GPIO14
    dingtian_q7_pin: GPIO16
    dingtian_sdi_pin: GPIO13
    dingtian_pl_pin: GPIO32
    dingtian_rck_pin: GPIO15

output:
  - platform: ledc
    pin: GPIO2
    id: gpio_2

sensor:
  - platform: dallas_temp
    address: 0xb10000039ec2e128 # id can be obtained from logs on first boot
    name: ${friendly_name} Temperature 1
    id: temp_sens1
  - platform: dallas_temp
    address: 0xb509225473500128 # id can be obtained from logs on first boot
    name: ${friendly_name} Temperature 2
    id: temp_sens2

one_wire:
  - platform: gpio
    pin: GPIO4

# Example usage in a light
#light:
#  - platform: monochromatic
#    output: gpio_2
#    name: ${friendly_name} Display backlight

#sensor:
#  - platform: modbus_controller
#    modbus_controller_id: epever
#    name: ${friendly_name} Temperature
#    id: temperature
#    register_type: read #0x04
#    address: 0x0001
#    unit_of_measurement: "C"
#    value_type: S_WORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1
#  - platform: modbus_controller
#    modbus_controller_id: epever
#    name: ${friendly_name} Humidity
#    id: humidity
#    register_type: read #0x04
#    address: 0x0002
#    unit_of_measurement: "%"
#    value_type: S_WORD
#    accuracy_decimals: 1
#    filters:
#    - multiply: 0.1


binary_sensor:
#  - platform: template
#    id: backlight
#    filters:
#      - delayed_off: 20s
#    on_press:
#      then:
#        - lambda: |-
#            id(lcd_disp).backlight();
#    on_release:
#      then:
#        - lambda: |-
#            id(lcd_disp).no_backlight();

  - platform: gpio
    id: input_1
    name: ${friendly_name} Input Light
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 7
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    #on_press:
    #  then:
    #    - switch.toggle: relay_1
    #    - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input Close
    id: input_2
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 6
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    #on_press:
    #  then:
    #    - switch.toggle: relay_2

  - platform: gpio
    name: ${friendly_name} Input Open
    id: input_3
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 5
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    #on_press:
    #  then:
    #    - switch.toggle: relay_3
    #    - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input 4
    id: input_4
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 4
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
#    on_press:
#      then:
#        - switch.toggle: relay_4
#       - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input 5
    id: input_5
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 3
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
#    on_press:
#      then:
#        - switch.toggle: relay_5
#        - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input 6
    id: input_6
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 2
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
#    on_press:
#      then:
#        - switch.toggle: relay_6
#        - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input 7
    id: input_7
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 1
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
#    on_press:
#      then:
#        - switch.toggle: relay_7
#        - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input 8
    id: input_8
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 0
      inverted: true
      allow_other_uses: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
#    on_press:
#      then:
#        - switch.toggle: relay_8
#        - script.execute: backlight_toggle

  - platform: gpio
    name: ${friendly_name} Input 9
    id: input_9
    pin:
      number: 34
      mode:
        input: true
      inverted: true
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
#    on_press:
#      then:
#      - script.execute: backlight_toggle


switch:
  - platform: gpio
    name: ${friendly_name} Gate Button
    id: relay_1
    restore_mode: ALWAYS_OFF
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 7
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 2
    id: relay_2
    restore_mode: ALWAYS_OFF
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 6
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 3
    id: relay_3
    restore_mode: ALWAYS_OFF
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 5
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 4
    id: relay_4
    restore_mode: ALWAYS_OFF
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 4
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 5
    id: relay_5
    restore_mode: ALWAYS_OFF
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 3
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 6
    id: relay_6
    restore_mode: ALWAYS_OFF
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 2
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 7
    id: relay_7
    restore_mode: ALWAYS_OFF
    interlock: [relay_8]
    interlock_wait_time: 250ms
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 1
      inverted: false
      allow_other_uses: true
  - platform: gpio
    name: ${friendly_name} Relay 8
    id: relay_8
    restore_mode: ALWAYS_OFF
    interlock: [relay_7]
    interlock_wait_time: 250ms
    pin:
      dtr0xx_io: dtr0xx_io_hub
      number: 0
      inverted: false
      allow_other_uses: true
#script:
#  - id: backlight_toggle
#    then:
#      - binary_sensor.template.publish:
#          id: backlight
#          state: ON
#      - binary_sensor.template.publish:
#          id: backlight
#          state: OFF

cover:
- platform: feedback
  name: ${upper_devicename} Cover
  id: my_cover_1
  max_duration: 20s
  open_action:
    - script.execute: opening
    #- switch.turn_on: open_sens
    #- switch.turn_off: close_sens
  #open_sensor: endstop_cover_1_1
  open_duration: 20s
  #open_endstop: endstop_cover_1_1
  close_action:
    - script.execute: closing
    #- switch.turn_off: open_sens
    #- switch.turn_on: close_sens
  #close_sensor: endstop_cover_1_2
  close_duration: 20s
  #close_endstop: endstop_cover_1_2
  stop_action:
    - script.execute: stopping

script:
  - id: stopping
    then:
      - delay: 200ms
      - if:
          condition:
            or:
              - binary_sensor.is_on: input_3
              - binary_sensor.is_on: input_2
          then:
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1  
      #- switch.turn_on: my_switch
      #- delay: 1s
      #- switch.turn_off: my_switch
  - id: closing
    then:
      - switch.turn_on: relay_1
      - delay: 100ms
      - switch.turn_off: relay_1  
      - delay: 200ms
      - if:
          condition:
            and:
              - binary_sensor.is_off: input_3
              - binary_sensor.is_off: input_2
          then:
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1
      - delay: 200ms        
      - if:
          condition:
              binary_sensor.is_on: input_3
          then:
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1
            - delay: 100ms
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1

  - id: opening
    then:
      - switch.turn_on: relay_1
      - delay: 100ms
      - switch.turn_off: relay_1  
      - delay: 200ms
      - if:
          condition:
            and:
              - binary_sensor.is_off: input_3
              - binary_sensor.is_off: input_2
          then:
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1
      - delay: 200ms  
      - if:
          condition:
              binary_sensor.is_on: input_2
          then:
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1
            - delay: 100ms
            - switch.turn_on: relay_1
            - delay: 100ms
            - switch.turn_off: relay_1